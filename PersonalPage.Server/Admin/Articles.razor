@page "/articles"

@using Blazored.TextEditor;
@using PersonalPage.Server.Services;
@using PersonalPage.Persistence.Models;

<h3>Articles</h3>

<div class="container-fluid">
    <div class="row site-form-row">
        <span class="col-sm-2 col-lg-1 align-self-center">Title</span>
        <input class="col-sm-6 form-control" type="text" @bind-value="@Title" />
    </div>
    <div class="row align-items-center site-form-row">
        <span class="col-sm-2 col-lg-1 align-self-center">Summary</span>
        <input class="col-sm-10 col-lg-11 form-control" type="text" @bind-value="@Brief" />
    </div>
</div>
<BlazoredTextEditor @ref="@ArticleEditor">
    <ToolbarContent>
        <select class="ql-header">
            <option selected=""></option>
            <option value="1"></option>
            <option value="2"></option>
            <option value="3"></option>
            <option value="4"></option>
            <option value="5"></option>
        </select>
        <span class="ql-formats">
            <button class="ql-bold"></button>
            <button class="ql-italic"></button>
            <button class="ql-underline"></button>
            <button class="ql-strike"></button>
        </span>
        <span class="ql-formats">
            <select class="ql-color"></select>
            <select class="ql-background"></select>
        </span>
        <span class="ql-formats">
            <button class="ql-list" value="ordered"></button>
            <button class="ql-list" value="bullet"></button>
        </span>
        <span class="ql-formats">
            <button class="ql-link"></button>
        </span>
    </ToolbarContent>
    <EditorContent>
    </EditorContent>
</BlazoredTextEditor>
<button class="btn btn-primary" @onclick="SaveArticle">Create</button>


    @code {
        public string Title { get; set; }
        public string Brief { get; set; }
        public BlazoredTextEditor ArticleEditor { get; set; }


        [Inject]
        public IArticleService ArticleService { get; set; }

        [Inject]
        public NavigationManager NavManager { get; set; }

        public async Task SaveArticle()
        {
            var html = await this.ArticleEditor.GetHTML();
            var article = new Article
            {
                Title = Title,
                ContentBrief = Brief,
                Content = html
            };
            await ArticleService.CreateArticle(article);
            NavManager.NavigateTo("/");
            StateHasChanged();
        }
    }
